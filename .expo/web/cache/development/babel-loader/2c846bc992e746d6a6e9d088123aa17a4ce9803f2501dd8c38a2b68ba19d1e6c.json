{"ast":null,"code":"var calculateAge = function calculateAge() {\n  if (age) {\n    var currentDate = new Date();\n    var birthDate = new Date(age);\n    var ageInYears = currentDate.getFullYear() - birthDate.getFullYear();\n    var millisecondsPerWeek = 7 * 24 * 60 * 60 * 1000;\n    var ageInWeeks = Math.floor((currentDate.getTime() - birthDate.getTime()) / millisecondsPerWeek);\n    var millisecondsPerDay = 24 * 60 * 60 * 1000;\n    var ageInDays = Math.floor((currentDate.getTime() - birthDate.getTime()) / millisecondsPerDay);\n    setAgeInYears(ageInYears);\n    setAgeInWeeks(ageInWeeks);\n    setAgeInDays(ageInDays);\n  }\n};\nuseEffect(function () {\n  calculateAge();\n}, [age]);","map":{"version":3,"names":["calculateAge","age","currentDate","Date","birthDate","ageInYears","getFullYear","millisecondsPerWeek","ageInWeeks","Math","floor","getTime","millisecondsPerDay","ageInDays","setAgeInYears","setAgeInWeeks","setAgeInDays","useEffect"],"sources":["/Users/saimsiddiqui/Desktop/chatgpt/reactnative/code/AwesomeProject/components/Age.js"],"sourcesContent":["const calculateAge = () => {\n    if (age) {\n      const currentDate = new Date();\n      const birthDate = new Date(age); // Assuming the age field contains the birthdate\n  \n      // Calculate age in years\n      const ageInYears = currentDate.getFullYear() - birthDate.getFullYear();\n  \n      // Calculate age in weeks\n      const millisecondsPerWeek = 7 * 24 * 60 * 60 * 1000;\n      const ageInWeeks = Math.floor(\n        (currentDate.getTime() - birthDate.getTime()) / millisecondsPerWeek\n      );\n  \n      // Calculate age in days\n      const millisecondsPerDay = 24 * 60 * 60 * 1000;\n      const ageInDays = Math.floor(\n        (currentDate.getTime() - birthDate.getTime()) / millisecondsPerDay\n      );\n  \n      setAgeInYears(ageInYears);\n      setAgeInWeeks(ageInWeeks);\n      setAgeInDays(ageInDays);\n    }\n  };\n  \n  useEffect(() => {\n    calculateAge();\n  }, [age]);\n  "],"mappings":"AAAA,IAAMA,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACvB,IAAIC,GAAG,EAAE;IACP,IAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC9B,IAAMC,SAAS,GAAG,IAAID,IAAI,CAACF,GAAG,CAAC;IAG/B,IAAMI,UAAU,GAAGH,WAAW,CAACI,WAAW,CAAC,CAAC,GAAGF,SAAS,CAACE,WAAW,CAAC,CAAC;IAGtE,IAAMC,mBAAmB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;IACnD,IAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAC3B,CAACR,WAAW,CAACS,OAAO,CAAC,CAAC,GAAGP,SAAS,CAACO,OAAO,CAAC,CAAC,IAAIJ,mBAClD,CAAC;IAGD,IAAMK,kBAAkB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;IAC9C,IAAMC,SAAS,GAAGJ,IAAI,CAACC,KAAK,CAC1B,CAACR,WAAW,CAACS,OAAO,CAAC,CAAC,GAAGP,SAAS,CAACO,OAAO,CAAC,CAAC,IAAIC,kBAClD,CAAC;IAEDE,aAAa,CAACT,UAAU,CAAC;IACzBU,aAAa,CAACP,UAAU,CAAC;IACzBQ,YAAY,CAACH,SAAS,CAAC;EACzB;AACF,CAAC;AAEDI,SAAS,CAAC,YAAM;EACdjB,YAAY,CAAC,CAAC;AAChB,CAAC,EAAE,CAACC,GAAG,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}