{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var ProfileContext = createContext();\nexport var ProfileProvider = function ProfileProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    age = _useState4[0],\n    setAge = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    weight = _useState6[0],\n    setWeight = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    height = _useState8[0],\n    setHeight = _useState8[1];\n  var updateProfileData = function updateProfileData(profileData) {\n    setName(profileData.name);\n    setAge(profileData.age);\n    setWeight(profileData.weight);\n    setHeight(profileData.height);\n  };\n  var profileData = {\n    name: name,\n    age: age,\n    weight: weight,\n    height: height,\n    updateProfileData: updateProfileData\n  };\n  return _jsx(ProfileContext.Provider, {\n    value: profileData,\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useState","jsx","_jsx","ProfileContext","ProfileProvider","_ref","children","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","age","setAge","_useState5","_useState6","weight","setWeight","_useState7","_useState8","height","setHeight","updateProfileData","profileData","Provider","value"],"sources":["/Users/saimsiddiqui/Desktop/chatgpt/reactnative/code/AwesomeProject/components/ProfileContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const ProfileContext = createContext();\n\nexport const ProfileProvider = ({ children }) => {\n    const [name, setName] = useState('');\n    const [age, setAge] = useState(); // Initialize age as an empty string\n    const [weight, setWeight] = useState('');\n    const [height, setHeight] = useState('');\n\n    const updateProfileData = (profileData) => {\n        // Update the profile data\n        setName(profileData.name);\n        setAge(profileData.age);\n        setWeight(profileData.weight);\n        setHeight(profileData.height);\n    };\n\n    const profileData = { name, age, weight, height, updateProfileData };\n\n    return (\n        <ProfileContext.Provider value={profileData}>{children}</ProfileContext.Provider>\n    );\n};\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEvD,OAAO,IAAMC,cAAc,GAAGJ,aAAa,CAAC,CAAC;AAE7C,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACtC,IAAAC,SAAA,GAAwBP,QAAQ,CAAC,EAAE,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAAI,UAAA,GAAsBZ,QAAQ,CAAC,CAAC;IAAAa,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzBE,GAAG,GAAAD,UAAA;IAAEE,MAAM,GAAAF,UAAA;EAClB,IAAAG,UAAA,GAA4BhB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAjCE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EACxB,IAAAG,UAAA,GAA4BpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAjCE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EAExB,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,WAAW,EAAK;IAEvCd,OAAO,CAACc,WAAW,CAACf,IAAI,CAAC;IACzBK,MAAM,CAACU,WAAW,CAACX,GAAG,CAAC;IACvBK,SAAS,CAACM,WAAW,CAACP,MAAM,CAAC;IAC7BK,SAAS,CAACE,WAAW,CAACH,MAAM,CAAC;EACjC,CAAC;EAED,IAAMG,WAAW,GAAG;IAAEf,IAAI,EAAJA,IAAI;IAAEI,GAAG,EAAHA,GAAG;IAAEI,MAAM,EAANA,MAAM;IAAEI,MAAM,EAANA,MAAM;IAAEE,iBAAiB,EAAjBA;EAAkB,CAAC;EAEpE,OACItB,IAAA,CAACC,cAAc,CAACuB,QAAQ;IAACC,KAAK,EAAEF,WAAY;IAAAnB,QAAA,EAAEA;EAAQ,CAA0B,CAAC;AAEzF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}