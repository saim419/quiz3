{"ast":null,"code":"import React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { ProfileContext } from \"./ProfileContext\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AgeScreen = function AgeScreen() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var calculateAgeInYears = function calculateAgeInYears(age) {\n    var millisecondsPerYear = 365.25 * 24 * 60 * 60 * 1000;\n    return Math.floor(age / millisecondsPerYear);\n  };\n  var calculateAgeInWeeks = function calculateAgeInWeeks(age) {\n    var millisecondsPerWeek = 7 * 24 * 60 * 60 * 1000;\n    return Math.floor(age / millisecondsPerWeek);\n  };\n  var calculateAgeInDays = function calculateAgeInDays(age) {\n    var millisecondsPerDay = 24 * 60 * 60 * 1000;\n    return Math.floor(age / millisecondsPerDay);\n  };\n  var AgeScreen = function AgeScreen() {\n    useEffect(function () {\n      if (age) {\n        var birthDate = new Date(age);\n        var currentDate = new Date();\n        var _ageInYears = calculateAgeInYears(currentDate - birthDate);\n        var _ageInWeeks = calculateAgeInWeeks(currentDate - birthDate);\n        var _ageInDays = calculateAgeInDays(currentDate - birthDate);\n        setAgeInYears(_ageInYears);\n        setAgeInWeeks(_ageInWeeks);\n        setAgeInDays(_ageInDays);\n      }\n    }, [age]);\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsxs(Text, {\n      children: [\"Age: \", age]\n    }), _jsxs(Text, {\n      children: [\"Age in Years: \", ageInYears]\n    }), _jsxs(Text, {\n      children: [\"Age in Weeks: \", ageInWeeks]\n    }), _jsxs(Text, {\n      children: [\"Age in Days: \", ageInDays]\n    })]\n  });\n};\nexport default AgeScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","Text","Button","useNavigation","useRoute","ProfileContext","jsxs","_jsxs","AgeScreen","navigation","route","calculateAgeInYears","age","millisecondsPerYear","Math","floor","calculateAgeInWeeks","millisecondsPerWeek","calculateAgeInDays","millisecondsPerDay","birthDate","Date","currentDate","ageInYears","ageInWeeks","ageInDays","setAgeInYears","setAgeInWeeks","setAgeInDays","style","flex","alignItems","justifyContent","children"],"sources":["/Users/saimsiddiqui/Desktop/chatgpt/reactnative/code/AwesomeProject/components/Age.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, Button } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { ProfileContext } from './ProfileContext';\n\nconst AgeScreen = () => {\n    const navigation = useNavigation();\n    const route = useRoute();\n\n    const calculateAgeInYears = (age) => {\n        const millisecondsPerYear = 365.25 * 24 * 60 * 60 * 1000;\n        return Math.floor(age / millisecondsPerYear);\n    };\n\n    const calculateAgeInWeeks = (age) => {\n        const millisecondsPerWeek = 7 * 24 * 60 * 60 * 1000;\n        return Math.floor(age / millisecondsPerWeek);\n    };\n\n    const calculateAgeInDays = (age) => {\n        const millisecondsPerDay = 24 * 60 * 60 * 1000;\n        return Math.floor(age / millisecondsPerDay);\n    };\n\n    const AgeScreen = () => {\n        // ...\n\n        useEffect(() => {\n            if (age) {\n                const birthDate = new Date(age);\n                const currentDate = new Date();\n\n                const ageInYears = calculateAgeInYears(currentDate - birthDate);\n                const ageInWeeks = calculateAgeInWeeks(currentDate - birthDate);\n                const ageInDays = calculateAgeInDays(currentDate - birthDate);\n\n                setAgeInYears(ageInYears);\n                setAgeInWeeks(ageInWeeks);\n                setAgeInDays(ageInDays);\n            }\n        }, [age]);\n\n        // ...\n    };\n\n\n    return (\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n            {/* Display age calculations */}\n            <Text>Age: {age}</Text>\n            <Text>Age in Years: {ageInYears}</Text>\n            <Text>Age in Weeks: {ageInWeeks}</Text>\n            <Text>Age in Days: {ageInDays}</Text>\n        </View>\n    );\n};\n\nexport default AgeScreen;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAE/D,SAASC,aAAa,EAAEC,QAAQ,QAAQ,0BAA0B;AAClE,SAASC,cAAc;AAA2B,SAAAC,IAAA,IAAAC,KAAA;AAElD,IAAMC,SAAS,GAAG,SAAAA,UAAA,EAAM;EACpB,IAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;EAClC,IAAMO,KAAK,GAAGN,QAAQ,CAAC,CAAC;EAExB,IAAMO,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,GAAG,EAAK;IACjC,IAAMC,mBAAmB,GAAG,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;IACxD,OAAOC,IAAI,CAACC,KAAK,CAACH,GAAG,GAAGC,mBAAmB,CAAC;EAChD,CAAC;EAED,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIJ,GAAG,EAAK;IACjC,IAAMK,mBAAmB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;IACnD,OAAOH,IAAI,CAACC,KAAK,CAACH,GAAG,GAAGK,mBAAmB,CAAC;EAChD,CAAC;EAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIN,GAAG,EAAK;IAChC,IAAMO,kBAAkB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;IAC9C,OAAOL,IAAI,CAACC,KAAK,CAACH,GAAG,GAAGO,kBAAkB,CAAC;EAC/C,CAAC;EAED,IAAMX,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IAGpBV,SAAS,CAAC,YAAM;MACZ,IAAIc,GAAG,EAAE;QACL,IAAMQ,SAAS,GAAG,IAAIC,IAAI,CAACT,GAAG,CAAC;QAC/B,IAAMU,WAAW,GAAG,IAAID,IAAI,CAAC,CAAC;QAE9B,IAAME,WAAU,GAAGZ,mBAAmB,CAACW,WAAW,GAAGF,SAAS,CAAC;QAC/D,IAAMI,WAAU,GAAGR,mBAAmB,CAACM,WAAW,GAAGF,SAAS,CAAC;QAC/D,IAAMK,UAAS,GAAGP,kBAAkB,CAACI,WAAW,GAAGF,SAAS,CAAC;QAE7DM,aAAa,CAACH,WAAU,CAAC;QACzBI,aAAa,CAACH,WAAU,CAAC;QACzBI,YAAY,CAACH,UAAS,CAAC;MAC3B;IACJ,CAAC,EAAE,CAACb,GAAG,CAAC,CAAC;EAGb,CAAC;EAGD,OACIL,KAAA,CAACP,IAAI;IAAC6B,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GAErE1B,KAAA,CAACN,IAAI;MAAAgC,QAAA,GAAC,OAAK,EAACrB,GAAG;IAAA,CAAO,CAAC,EACvBL,KAAA,CAACN,IAAI;MAAAgC,QAAA,GAAC,gBAAc,EAACV,UAAU;IAAA,CAAO,CAAC,EACvChB,KAAA,CAACN,IAAI;MAAAgC,QAAA,GAAC,gBAAc,EAACT,UAAU;IAAA,CAAO,CAAC,EACvCjB,KAAA,CAACN,IAAI;MAAAgC,QAAA,GAAC,eAAa,EAACR,SAAS;IAAA,CAAO,CAAC;EAAA,CACnC,CAAC;AAEf,CAAC;AAED,eAAejB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}