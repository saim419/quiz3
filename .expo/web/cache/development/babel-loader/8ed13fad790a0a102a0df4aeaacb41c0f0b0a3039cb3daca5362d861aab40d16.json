{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ProfileContext } from \"./ProfileContext\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AgeScreen = function AgeScreen() {\n  var _useContext = useContext(ProfileContext),\n    age = _useContext.age;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    ageInYears = _useState2[0],\n    setAgeInYears = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    ageInWeeks = _useState4[0],\n    setAgeInWeeks = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    ageInDays = _useState6[0],\n    setAgeInDays = _useState6[1];\n  useEffect(function () {\n    if (age) {\n      var birthDate = new Date(age);\n      var currentDate = new Date();\n      var ageDiff = currentDate - birthDate;\n      var millisecondsPerYear = 365.25 * 24 * 60 * 60 * 1000;\n      var _ageInYears = Math.floor(ageDiff / millisecondsPerYear);\n      var millisecondsPerWeek = 7 * 24 * 60 * 60 * 1000;\n      var _ageInWeeks = Math.floor(ageDiff / millisecondsPerWeek);\n      var millisecondsPerDay = 24 * 60 * 60 * 1000;\n      var _ageInDays = Math.floor(ageDiff / millisecondsPerDay);\n      setAgeInYears(_ageInYears);\n      setAgeInWeeks(_ageInWeeks);\n      setAgeInDays(_ageInDays);\n    }\n  }, [age]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsxs(Text, {\n      children: [\"Age: \", age]\n    }), _jsxs(Text, {\n      children: [\"Age in Years: \", ageInYears]\n    }), _jsxs(Text, {\n      children: [\"Age in Weeks: \", ageInWeeks]\n    }), _jsxs(Text, {\n      children: [\"Age in Days: \", ageInDays]\n    })]\n  });\n};\nexport default AgeScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","Text","ProfileContext","jsxs","_jsxs","AgeScreen","_useContext","age","_useState","_useState2","_slicedToArray","ageInYears","setAgeInYears","_useState3","_useState4","ageInWeeks","setAgeInWeeks","_useState5","_useState6","ageInDays","setAgeInDays","birthDate","Date","currentDate","ageDiff","millisecondsPerYear","Math","floor","millisecondsPerWeek","millisecondsPerDay","style","flex","alignItems","justifyContent","children"],"sources":["/Users/saimsiddiqui/Desktop/chatgpt/reactnative/code/AwesomeProject/components/Age.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text } from 'react-native';\nimport { ProfileContext } from './ProfileContext';\n\nconst AgeScreen = () => {\n    const { age } = useContext(ProfileContext);\n    const [ageInYears, setAgeInYears] = useState('');\n    const [ageInWeeks, setAgeInWeeks] = useState('');\n    const [ageInDays, setAgeInDays] = useState('');\n\n    useEffect(() => {\n        if (age) {\n            const birthDate = new Date(age);\n            const currentDate = new Date();\n\n            // Calculate age difference in milliseconds\n            const ageDiff = currentDate - birthDate;\n\n            // Calculate age in years\n            const millisecondsPerYear = 365.25 * 24 * 60 * 60 * 1000;\n            const ageInYears = Math.floor(ageDiff / millisecondsPerYear);\n\n            // Calculate age in weeks\n            const millisecondsPerWeek = 7 * 24 * 60 * 60 * 1000;\n            const ageInWeeks = Math.floor(ageDiff / millisecondsPerWeek);\n\n            // Calculate age in days\n            const millisecondsPerDay = 24 * 60 * 60 * 1000;\n            const ageInDays = Math.floor(ageDiff / millisecondsPerDay);\n\n            setAgeInYears(ageInYears);\n            setAgeInWeeks(ageInWeeks);\n            setAgeInDays(ageInDays);\n        }\n    }, [age]);\n\n    return (\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n            {/* Display age calculations */}\n            <Text>Age: {age}</Text>\n            <Text>Age in Years: {ageInYears}</Text>\n            <Text>Age in Weeks: {ageInWeeks}</Text>\n            <Text>Age in Days: {ageInDays}</Text>\n        </View>\n    );\n};\n\nexport default AgeScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE/D,SAASC,cAAc;AAA2B,SAAAC,IAAA,IAAAC,KAAA;AAElD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACpB,IAAAC,WAAA,GAAgBP,UAAU,CAACG,cAAc,CAAC;IAAlCK,GAAG,GAAAD,WAAA,CAAHC,GAAG;EACX,IAAAC,SAAA,GAAoCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAAI,UAAA,GAAoChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAkCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAvCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9BpB,SAAS,CAAC,YAAM;IACZ,IAAIS,GAAG,EAAE;MACL,IAAMc,SAAS,GAAG,IAAIC,IAAI,CAACf,GAAG,CAAC;MAC/B,IAAMgB,WAAW,GAAG,IAAID,IAAI,CAAC,CAAC;MAG9B,IAAME,OAAO,GAAGD,WAAW,GAAGF,SAAS;MAGvC,IAAMI,mBAAmB,GAAG,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;MACxD,IAAMd,WAAU,GAAGe,IAAI,CAACC,KAAK,CAACH,OAAO,GAAGC,mBAAmB,CAAC;MAG5D,IAAMG,mBAAmB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;MACnD,IAAMb,WAAU,GAAGW,IAAI,CAACC,KAAK,CAACH,OAAO,GAAGI,mBAAmB,CAAC;MAG5D,IAAMC,kBAAkB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;MAC9C,IAAMV,UAAS,GAAGO,IAAI,CAACC,KAAK,CAACH,OAAO,GAAGK,kBAAkB,CAAC;MAE1DjB,aAAa,CAACD,WAAU,CAAC;MACzBK,aAAa,CAACD,WAAU,CAAC;MACzBK,YAAY,CAACD,UAAS,CAAC;IAC3B;EACJ,CAAC,EAAE,CAACZ,GAAG,CAAC,CAAC;EAET,OACIH,KAAA,CAACJ,IAAI;IAAC8B,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GAErE9B,KAAA,CAACH,IAAI;MAAAiC,QAAA,GAAC,OAAK,EAAC3B,GAAG;IAAA,CAAO,CAAC,EACvBH,KAAA,CAACH,IAAI;MAAAiC,QAAA,GAAC,gBAAc,EAACvB,UAAU;IAAA,CAAO,CAAC,EACvCP,KAAA,CAACH,IAAI;MAAAiC,QAAA,GAAC,gBAAc,EAACnB,UAAU;IAAA,CAAO,CAAC,EACvCX,KAAA,CAACH,IAAI;MAAAiC,QAAA,GAAC,eAAa,EAACf,SAAS;IAAA,CAAO,CAAC;EAAA,CACnC,CAAC;AAEf,CAAC;AAED,eAAed,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}