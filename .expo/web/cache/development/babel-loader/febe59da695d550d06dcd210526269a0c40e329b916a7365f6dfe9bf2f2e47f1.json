{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ProfileContext } from \"./ProfileContext\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AgeScreen = function AgeScreen() {\n  var _useContext = useContext(ProfileContext),\n    age = _useContext.age;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    ageInYears = _useState2[0],\n    setAgeInYears = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    ageInWeeks = _useState4[0],\n    setAgeInWeeks = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    ageInDays = _useState6[0],\n    setAgeInDays = _useState6[1];\n  useEffect(function () {\n    calculateAge();\n  }, [age]);\n  var calculateAge = function calculateAge() {\n    var currentDate = new Date();\n    var birthDate = new Date(age);\n    var ageInYears = currentDate.getFullYear() - birthDate.getFullYear();\n    var millisecondsPerWeek = 7 * 24 * 60 * 60 * 1000;\n    var ageInWeeks = Math.floor((currentDate.getTime() - birthDate.getTime()) / millisecondsPerWeek);\n    var millisecondsPerDay = 24 * 60 * 60 * 1000;\n    var ageInDays = Math.floor((currentDate.getTime() - birthDate.getTime()) / millisecondsPerDay);\n    setAgeInYears(ageInYears);\n    setAgeInWeeks(ageInWeeks);\n    setAgeInDays(ageInDays);\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsxs(Text, {\n      children: [\"Age: \", age]\n    }), _jsxs(Text, {\n      children: [\"Age in Years: \", ageInYears]\n    }), _jsxs(Text, {\n      children: [\"Age in Weeks: \", ageInWeeks]\n    }), _jsxs(Text, {\n      children: [\"Age in Days: \", ageInDays]\n    })]\n  });\n};\nexport default AgeScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","Text","ProfileContext","jsxs","_jsxs","AgeScreen","_useContext","age","_useState","_useState2","_slicedToArray","ageInYears","setAgeInYears","_useState3","_useState4","ageInWeeks","setAgeInWeeks","_useState5","_useState6","ageInDays","setAgeInDays","calculateAge","currentDate","Date","birthDate","getFullYear","millisecondsPerWeek","Math","floor","getTime","millisecondsPerDay","style","flex","alignItems","justifyContent","children"],"sources":["/Users/saimsiddiqui/Desktop/chatgpt/reactnative/code/AwesomeProject/components/Age.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text } from 'react-native';\nimport { ProfileContext } from './ProfileContext';\n\nconst AgeScreen = () => {\n    const { age } = useContext(ProfileContext);\n    const [ageInYears, setAgeInYears] = useState('');\n    const [ageInWeeks, setAgeInWeeks] = useState('');\n    const [ageInDays, setAgeInDays] = useState('');\n\n    useEffect(() => {\n        calculateAge();\n    }, [age]);\n\n    const calculateAge = () => {\n        const currentDate = new Date();\n        const birthDate = new Date(age); // Assuming the age field contains the birthdate\n\n        // Calculate age in years\n        const ageInYears = currentDate.getFullYear() - birthDate.getFullYear();\n\n        // Calculate age in weeks\n        const millisecondsPerWeek = 7 * 24 * 60 * 60 * 1000;\n        const ageInWeeks = Math.floor(\n            (currentDate.getTime() - birthDate.getTime()) / millisecondsPerWeek\n        );\n\n        // Calculate age in days\n        const millisecondsPerDay = 24 * 60 * 60 * 1000;\n        const ageInDays = Math.floor(\n            (currentDate.getTime() - birthDate.getTime()) / millisecondsPerDay\n        );\n\n        setAgeInYears(ageInYears);\n        setAgeInWeeks(ageInWeeks);\n        setAgeInDays(ageInDays);\n    };\n\n    return (\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n            {/* Display age calculations */}\n            <Text>Age: {age}</Text>\n            <Text>Age in Years: {ageInYears}</Text>\n            <Text>Age in Weeks: {ageInWeeks}</Text>\n            <Text>Age in Days: {ageInDays}</Text>\n        </View>\n    );\n};\n\nexport default AgeScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE/D,SAASC,cAAc;AAA2B,SAAAC,IAAA,IAAAC,KAAA;AAElD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACpB,IAAAC,WAAA,GAAgBP,UAAU,CAACG,cAAc,CAAC;IAAlCK,GAAG,GAAAD,WAAA,CAAHC,GAAG;EACX,IAAAC,SAAA,GAAoCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAAI,UAAA,GAAoChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAkCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAvCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9BpB,SAAS,CAAC,YAAM;IACZuB,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACd,GAAG,CAAC,CAAC;EAET,IAAMc,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACvB,IAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC9B,IAAMC,SAAS,GAAG,IAAID,IAAI,CAAChB,GAAG,CAAC;IAG/B,IAAMI,UAAU,GAAGW,WAAW,CAACG,WAAW,CAAC,CAAC,GAAGD,SAAS,CAACC,WAAW,CAAC,CAAC;IAGtE,IAAMC,mBAAmB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;IACnD,IAAMX,UAAU,GAAGY,IAAI,CAACC,KAAK,CACzB,CAACN,WAAW,CAACO,OAAO,CAAC,CAAC,GAAGL,SAAS,CAACK,OAAO,CAAC,CAAC,IAAIH,mBACpD,CAAC;IAGD,IAAMI,kBAAkB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;IAC9C,IAAMX,SAAS,GAAGQ,IAAI,CAACC,KAAK,CACxB,CAACN,WAAW,CAACO,OAAO,CAAC,CAAC,GAAGL,SAAS,CAACK,OAAO,CAAC,CAAC,IAAIC,kBACpD,CAAC;IAEDlB,aAAa,CAACD,UAAU,CAAC;IACzBK,aAAa,CAACD,UAAU,CAAC;IACzBK,YAAY,CAACD,SAAS,CAAC;EAC3B,CAAC;EAED,OACIf,KAAA,CAACJ,IAAI;IAAC+B,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GAErE/B,KAAA,CAACH,IAAI;MAAAkC,QAAA,GAAC,OAAK,EAAC5B,GAAG;IAAA,CAAO,CAAC,EACvBH,KAAA,CAACH,IAAI;MAAAkC,QAAA,GAAC,gBAAc,EAACxB,UAAU;IAAA,CAAO,CAAC,EACvCP,KAAA,CAACH,IAAI;MAAAkC,QAAA,GAAC,gBAAc,EAACpB,UAAU;IAAA,CAAO,CAAC,EACvCX,KAAA,CAACH,IAAI;MAAAkC,QAAA,GAAC,eAAa,EAAChB,SAAS;IAAA,CAAO,CAAC;EAAA,CACnC,CAAC;AAEf,CAAC;AAED,eAAed,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}