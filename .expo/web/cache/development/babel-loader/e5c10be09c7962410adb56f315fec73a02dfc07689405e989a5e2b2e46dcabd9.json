{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useRoute } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AgeScreen = function AgeScreen() {\n  var _route$params;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    ageInYears = _useState2[0],\n    setAgeInYears = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    ageInWeeks = _useState4[0],\n    setAgeInWeeks = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    ageInDays = _useState6[0],\n    setAgeInDays = _useState6[1];\n  var route = useRoute();\n  var age = ((_route$params = route.params) == null ? void 0 : _route$params.age) || '';\n  var calculateAge = function calculateAge(age) {\n    if (!isNaN(age)) {\n      var years = parseInt(age);\n      var weeks = years * 52;\n      var days = years * 365;\n      setAgeInYears(years.toString());\n      setAgeInWeeks(weeks.toString());\n      setAgeInDays(days.toString());\n    } else {\n      setAgeInYears('');\n      setAgeInWeeks('');\n      setAgeInDays('');\n    }\n  };\n  useEffect(function () {\n    calculateAge(age);\n  }, [age]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start'\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 15\n      },\n      children: \"Age Calculator\"\n    }), _jsxs(Text, {\n      style: {\n        fontSize: 15\n      },\n      children: [\"Age in years: \", ageInYears]\n    }), _jsxs(Text, {\n      style: {\n        fontSize: 15\n      },\n      children: [\"Age in weeks: \", ageInWeeks]\n    }), _jsxs(Text, {\n      style: {\n        fontSize: 15\n      },\n      children: [\"Age in days: \", ageInDays]\n    })]\n  });\n};\nexport default AgeScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","useRoute","jsx","_jsx","jsxs","_jsxs","AgeScreen","_route$params","_useState","_useState2","_slicedToArray","ageInYears","setAgeInYears","_useState3","_useState4","ageInWeeks","setAgeInWeeks","_useState5","_useState6","ageInDays","setAgeInDays","route","age","params","calculateAge","isNaN","years","parseInt","weeks","days","toString","style","flex","alignItems","justifyContent","children","fontSize"],"sources":["/Users/saimsiddiqui/Desktop/chatgpt/reactnative/code/AwesomeProject/components/Age.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text } from 'react-native';\nimport { useRoute } from '@react-navigation/native';\n\nconst AgeScreen = () => {\n    const [ageInYears, setAgeInYears] = useState('');\n    const [ageInWeeks, setAgeInWeeks] = useState('');\n    const [ageInDays, setAgeInDays] = useState('');\n\n    const route = useRoute();\n    const age = route.params?.age || ''; // Access the passed age parameter\n\n    const calculateAge = (age) => {\n        if (!isNaN(age)) {\n            const years = parseInt(age);\n            const weeks = years * 52;\n            const days = years * 365;\n\n            setAgeInYears(years.toString());\n            setAgeInWeeks(weeks.toString());\n            setAgeInDays(days.toString());\n        } else {\n            setAgeInYears('');\n            setAgeInWeeks('');\n            setAgeInDays('');\n        }\n    };\n\n    useEffect(() => {\n        calculateAge(age);\n    }, [age]);\n\n    return (\n        <View style={{ flex: 1, alignItems: 'flex-start', justifyContent: 'flex-start' }}>\n            <Text style={{ fontSize: 15 }}>Age Calculator</Text>\n            <Text style={{ fontSize: 15 }}>Age in years: {ageInYears}</Text>\n            <Text style={{ fontSize: 15 }}>Age in weeks: {ageInWeeks}</Text>\n            <Text style={{ fontSize: 15 }}>Age in days: {ageInDays}</Text>\n        </View>\n    );\n};\n\nexport default AgeScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEnD,SAASC,QAAQ,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EAAA,IAAAC,aAAA;EACpB,IAAAC,SAAA,GAAoCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAAI,UAAA,GAAoChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAkCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAvCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAMG,KAAK,GAAGpB,QAAQ,CAAC,CAAC;EACxB,IAAMqB,GAAG,GAAG,EAAAf,aAAA,GAAAc,KAAK,CAACE,MAAM,qBAAZhB,aAAA,CAAce,GAAG,KAAI,EAAE;EAEnC,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAIF,GAAG,EAAK;IAC1B,IAAI,CAACG,KAAK,CAACH,GAAG,CAAC,EAAE;MACb,IAAMI,KAAK,GAAGC,QAAQ,CAACL,GAAG,CAAC;MAC3B,IAAMM,KAAK,GAAGF,KAAK,GAAG,EAAE;MACxB,IAAMG,IAAI,GAAGH,KAAK,GAAG,GAAG;MAExBd,aAAa,CAACc,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC;MAC/Bd,aAAa,CAACY,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC;MAC/BV,YAAY,CAACS,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;IACjC,CAAC,MAAM;MACHlB,aAAa,CAAC,EAAE,CAAC;MACjBI,aAAa,CAAC,EAAE,CAAC;MACjBI,YAAY,CAAC,EAAE,CAAC;IACpB;EACJ,CAAC;EAEDtB,SAAS,CAAC,YAAM;IACZ0B,YAAY,CAACF,GAAG,CAAC;EACrB,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EAET,OACIjB,KAAA,CAACN,IAAI;IAACgC,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,YAAY;MAAEC,cAAc,EAAE;IAAa,CAAE;IAAAC,QAAA,GAC7EhC,IAAA,CAACH,IAAI;MAAC+B,KAAK,EAAE;QAAEK,QAAQ,EAAE;MAAG,CAAE;MAAAD,QAAA,EAAC;IAAc,CAAM,CAAC,EACpD9B,KAAA,CAACL,IAAI;MAAC+B,KAAK,EAAE;QAAEK,QAAQ,EAAE;MAAG,CAAE;MAAAD,QAAA,GAAC,gBAAc,EAACxB,UAAU;IAAA,CAAO,CAAC,EAChEN,KAAA,CAACL,IAAI;MAAC+B,KAAK,EAAE;QAAEK,QAAQ,EAAE;MAAG,CAAE;MAAAD,QAAA,GAAC,gBAAc,EAACpB,UAAU;IAAA,CAAO,CAAC,EAChEV,KAAA,CAACL,IAAI;MAAC+B,KAAK,EAAE;QAAEK,QAAQ,EAAE;MAAG,CAAE;MAAAD,QAAA,GAAC,eAAa,EAAChB,SAAS;IAAA,CAAO,CAAC;EAAA,CAC5D,CAAC;AAEf,CAAC;AAED,eAAeb,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}