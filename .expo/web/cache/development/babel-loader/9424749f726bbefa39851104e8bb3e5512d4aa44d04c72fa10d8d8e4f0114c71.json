{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { useValue } from \"./ContextDemos/ValueContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BmiScreen = function BmiScreen() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var _route$params = route.params,\n    weight = _route$params.weight,\n    height = _route$params.height;\n  var calculateBmi = function calculateBmi() {\n    var heightInMeters = height / 100;\n    var bmi = weight / (heightInMeters * heightInMeters);\n    return bmi.toFixed(2);\n  };\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    bmi = _useState2[0],\n    setBmi = _useState2[1];\n  useEffect(function () {\n    var bmi = calculateBmi();\n    setBmi(bmi);\n  }, [weight, height]);\n  var goBack = function goBack() {\n    navigation.goBack();\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start'\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 15\n      },\n      children: \"BMI Calculator\"\n    }), _jsxs(Text, {\n      style: {\n        fontSize: 15\n      },\n      children: [\"Height: \", height, \" cm\"]\n    }), _jsxs(Text, {\n      style: {\n        fontSize: 15\n      },\n      children: [\"Weight: \", weight, \" kg\"]\n    }), _jsxs(Text, {\n      style: {\n        fontSize: 15\n      },\n      children: [\"BMI: \", bmi]\n    }), _jsx(Button, {\n      title: \"Go Back\",\n      onPress: goBack\n    })]\n  });\n};\nexport default BmiScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","useNavigation","useRoute","useValue","jsx","_jsx","jsxs","_jsxs","BmiScreen","navigation","route","_route$params","params","weight","height","calculateBmi","heightInMeters","bmi","toFixed","_useState","_useState2","_slicedToArray","setBmi","goBack","style","flex","alignItems","justifyContent","children","fontSize","title","onPress"],"sources":["/Users/saimsiddiqui/Desktop/chatgpt/reactnative/code/AwesomeProject/components/Bmi.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Button } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { useValue } from './ContextDemos/ValueContext';\n\nconst BmiScreen = () => {\n    const navigation = useNavigation();\n    const route = useRoute();\n    const { weight, height } = route.params;\n\n\n    const calculateBmi = () => {\n        // Perform BMI calculation based on height and weight\n        const heightInMeters = height / 100; // Convert height from cm to meters\n        const bmi = weight / (heightInMeters * heightInMeters);\n        return bmi.toFixed(2); // Return BMI rounded to 2 decimal places\n    };\n\n    const [bmi, setBmi] = useState('');\n\n    useEffect(() => {\n        const bmi = calculateBmi();\n        setBmi(bmi);\n    }, [weight, height]);\n\n    const goBack = () => {\n        navigation.goBack();\n    };\n\n    return (\n        <View style={{ flex: 1, alignItems: 'flex-start', justifyContent: 'flex-start' }}>\n            <Text style={{ fontSize: 15 }}>BMI Calculator</Text>\n            <Text style={{ fontSize: 15 }}>Height: {height} cm</Text>\n            <Text style={{ fontSize: 15 }}>Weight: {weight} kg</Text>\n            <Text style={{ fontSize: 15 }}>BMI: {bmi}</Text>\n            <Button title=\"Go Back\" onPress={goBack} />\n        </View>\n    );\n};\n\nexport default BmiScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAEnD,SAASC,aAAa,EAAEC,QAAQ,QAAQ,0BAA0B;AAClE,SAASC,QAAQ;AAAsC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACpB,IAAMC,UAAU,GAAGR,aAAa,CAAC,CAAC;EAClC,IAAMS,KAAK,GAAGR,QAAQ,CAAC,CAAC;EACxB,IAAAS,aAAA,GAA2BD,KAAK,CAACE,MAAM;IAA/BC,MAAM,GAAAF,aAAA,CAANE,MAAM;IAAEC,MAAM,GAAAH,aAAA,CAANG,MAAM;EAGtB,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IAEvB,IAAMC,cAAc,GAAGF,MAAM,GAAG,GAAG;IACnC,IAAMG,GAAG,GAAGJ,MAAM,IAAIG,cAAc,GAAGA,cAAc,CAAC;IACtD,OAAOC,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,IAAAC,SAAA,GAAsBvB,QAAQ,CAAC,EAAE,CAAC;IAAAwB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3BF,GAAG,GAAAG,UAAA;IAAEE,MAAM,GAAAF,UAAA;EAElBvB,SAAS,CAAC,YAAM;IACZ,IAAMoB,GAAG,GAAGF,YAAY,CAAC,CAAC;IAC1BO,MAAM,CAACL,GAAG,CAAC;EACf,CAAC,EAAE,CAACJ,MAAM,EAAEC,MAAM,CAAC,CAAC;EAEpB,IAAMS,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;IACjBd,UAAU,CAACc,MAAM,CAAC,CAAC;EACvB,CAAC;EAED,OACIhB,KAAA,CAACT,IAAI;IAAC0B,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,YAAY;MAAEC,cAAc,EAAE;IAAa,CAAE;IAAAC,QAAA,GAC7EvB,IAAA,CAACN,IAAI;MAACyB,KAAK,EAAE;QAAEK,QAAQ,EAAE;MAAG,CAAE;MAAAD,QAAA,EAAC;IAAc,CAAM,CAAC,EACpDrB,KAAA,CAACR,IAAI;MAACyB,KAAK,EAAE;QAAEK,QAAQ,EAAE;MAAG,CAAE;MAAAD,QAAA,GAAC,UAAQ,EAACd,MAAM,EAAC,KAAG;IAAA,CAAM,CAAC,EACzDP,KAAA,CAACR,IAAI;MAACyB,KAAK,EAAE;QAAEK,QAAQ,EAAE;MAAG,CAAE;MAAAD,QAAA,GAAC,UAAQ,EAACf,MAAM,EAAC,KAAG;IAAA,CAAM,CAAC,EACzDN,KAAA,CAACR,IAAI;MAACyB,KAAK,EAAE;QAAEK,QAAQ,EAAE;MAAG,CAAE;MAAAD,QAAA,GAAC,OAAK,EAACX,GAAG;IAAA,CAAO,CAAC,EAChDZ,IAAA,CAACL,MAAM;MAAC8B,KAAK,EAAC,SAAS;MAACC,OAAO,EAAER;IAAO,CAAE,CAAC;EAAA,CACzC,CAAC;AAEf,CAAC;AAED,eAAef,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}